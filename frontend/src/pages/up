import React, { useState, useContext, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { AuthContext } from '../components/AuthProvider';
import NavBar from '../components/NavBar';
import ReportTable from '../components/ReportTable';
import { motion } from 'framer-motion';
import axios from 'axios';

const UploadFingerprint = () => {
  const { user } = useContext(AuthContext);
  const navigate = useNavigate();

  const [file, setFile] = useState(null);
  const [searchCode, setSearchCode] = useState('');
  const [dateFrom, setDateFrom] = useState('');
  const [dateTo, setDateTo] = useState('');
  const [reports, setReports] = useState([]);
  const [editingReport, setEditingReport] = useState(null);
  const [loading, setLoading] = useState(false);

  // ننتظر حتى يتم تحميل بيانات المستخدم
  if (user === undefined) {
    return <div className="min-h-screen flex items-center justify-center">جاري التحقق من بيانات المستخدم...</div>;
  }

  // إعادة توجيه إذا لم يكن المستخدم مسجلاً أو ليس أدمن
  useEffect(() => {
    if (user === null || user.role !== 'admin') {
      navigate('/login');
    }
  }, [user, navigate]);

  if (!user || user.role !== 'admin') {
    return null; // لا تعرض الصفحة للمستخدمين غير المصرح لهم
  }

  const handleFileChange = (e) => {
    setFile(e.target.files[0]);
  };

  const handleUpload = async (e) => {
    e.preventDefault();
    if (!file) {
      alert('يرجى اختيار ملف أولاً');
      return;
    }
    setLoading(true);
    const formData = new FormData();
    formData.append('file', file);
    try {
      const response = await axios.post(`${process.env.REACT_APP_API_URL}/api/fingerprints/upload`, formData, {
        headers: {
          Authorization: `Bearer ${localStorage.getItem('token')}`,
          'Content-Type': 'multipart/form-data',
        },
      });
      setReports(response.data.reports);
      alert('تم رفع الملف وتحديث البيانات');
      setFile(null);
    } catch (error) {
      alert('خطأ أثناء رفع الملف');
      console.error(error);
    }
    setLoading(false);
  };

  const handleSearch = async () => {
    setLoading(true);
    try {
      const response = await axios.get(`${process.env.REACT_APP_API_URL}/api/fingerprints`, {
        params: { code: searchCode, dateFrom, dateTo },
        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },
      });
      setReports(response.data.reports);
    } catch (error) {
      alert('خطأ أثناء البحث');
      console.error(error);
    }
    setLoading(false);
  };

  const handleEdit = (report) => {
    setEditingReport({
      ...report,
      checkIn: report.checkIn ? report.checkIn.slice(0, 16) : '',
      checkOut: report.checkOut ? report.checkOut.slice(0, 16) : '',
    });
  };

  const handleSaveEdit = async () => {
    if (!editingReport) return;
    setLoading(true);
    try {
      const response = await axios.put(
        `${process.env.REACT_APP_API_URL}/api/fingerprints/${editingReport._id}`,
        editingReport,
        {
          headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },
        }
      );
      const updatedReport = response.data.report;
      setReports((prev) => prev.map((r) => (r._id === updatedReport._id ? updatedReport : r)));
      setEditingReport(null);
      alert('تم حفظ التعديلات وحساب الخصم تلقائيًا');
    } catch (error) {
      alert('خطأ أثناء حفظ التعديلات');
      console.error(error);
    }
    setLoading(false);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <NavBar />
      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} className="p-6 max-w-7xl mx-auto">
        <h1 className="text-3xl font-bold mb-6 text-gray-800">رفع بصمة وعرض التقرير</h1>

        {/* رفع ملف البصمة */}
        <div className="bg-white p-6 rounded-lg shadow mb-6">
          <h3 className="text-xl font-semibold mb-4">رفع ملف البصمة</h3>
          <form onSubmit={handleUpload} className="flex flex-col md:flex-row items-center gap-4">
            <input
              type="file"
              accept=".xlsx,.csv"
              onChange={handleFileChange}
              className="border p-2 rounded-md w-full md:w-auto"
            />
            <button
              type="submit"
              className={`btn-primary px-6 py-3 rounded-md text-white font-semibold transition ${
                loading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-700'
              }`}
              disabled={loading}
            >
              {loading ? 'جاري الرفع...' : 'رفع الملف'}
            </button>
          </form>
        </div>

        {/* البحث في التقارير */}
        <div className="bg-white p-6 rounded-lg shadow mb-6">
          <h3 className="text-xl font-semibold mb-4">بحث في التقارير</h3>
          <div className="flex flex-wrap gap-4 mb-4 items-center">
            <input
              type="text"
              placeholder="الكود"
              value={searchCode}
              onChange={(e) => setSearchCode(e.target.value)}
              className="p-2 border rounded-md flex-grow min-w-[150px]"
            />
            <input
              type="date"
              value={dateFrom}
              onChange={(e) => setDateFrom(e.target.value)}
              className="p-2 border rounded-md"
            />
            <input
              type="date"
              value={dateTo}
              onChange={(e) => setDateTo(e.target.value)}
              className="p-2 border rounded-md"
            />
            <button
              onClick={handleSearch}
              className={`btn-primary px-5 py-2 rounded-md text-white font-semibold transition ${
                loading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-700'
              }`}
              disabled={loading}
            >
              {loading ? 'جاري البحث...' : 'بحث'}
            </button>
            <button
              onClick={() => {
                setSearchCode('');
                setDateFrom('');
                setDateTo('');
                handleSearch();
              }}
              className="btn-secondary px-5 py-2 rounded-md border border-gray-400 hover:bg-gray-200 transition font-semibold"
              disabled={loading}
            >
              عرض الكل
            </button>
          </div>
        </div>

        {/* جدول التقارير */}
        <ReportTable reports={reports} onEdit={handleEdit} />

        {/* نموذج التعديل */}
        {editingReport && (
          <div className="mt-6 bg-white p-6 rounded-lg shadow">
            <h3 className="text-xl font-semibold mb-4">تعديل التقرير</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div>
                <label className="block mb-2 text-gray-700 font-medium">وقت الحضور</label>
                <input
                  type="datetime-local"
                  value={editingReport.checkIn}
                  onChange={(e) => setEditingReport({ ...editingReport, checkIn: e.target.value })}
                  className="w-full p-2 border rounded-md"
                />
              </div>
              <div>
                <label className="block mb-2 text-gray-700 font-medium">وقت الانصراف</label>
                <input
                  type="datetime-local"
                  value={editingReport.checkOut}
                  onChange={(e) => setEditingReport({ ...editingReport, checkOut: e.target.value })}
                  className="w-full p-2 border rounded-md"
                />
              </div>
              <div>
                <label className="block mb-2 text-gray-700 font-medium">دقائق التأخير المحسوبة</label>
                <input
                  type="number"
                  value={editingReport.lateMinutes || 0}
                  readOnly
                  className="w-full p-2 border rounded-md bg-gray-100 cursor-not-allowed"
                />
              </div>
              <div>
                <label className="block mb-2 text-gray-700 font-medium">خصم التأخير (أيام)</label>
                <input
                  type="number"
                  value={editingReport.lateDeduction || 0}
                  readOnly
                  className="w-full p-2 border rounded-md bg-gray-100 cursor-not-allowed"
                />
              </div>
            </div>
            <div className="mt-6 flex justify-end gap-4">
              <button
                onClick={() => setEditingReport(null)}
                className="btn-secondary px-5 py-2 rounded-md border border-gray-400 hover:bg-gray-200 transition font-semibold"
                disabled={loading}
              >
                إلغاء
              </button>
              <button
                onClick={handleSaveEdit}
                className={`btn-primary px-6 py-3 rounded-md text-white font-semibold transition ${
                  loading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-700'
                }`}
                disabled={loading}
              >
                {loading ? 'جاري الحفظ...' : 'حفظ التعديلات'}
              </button>
            </div>
          </div>
        )}
      </motion.div>
    </div>
  );
};

export default UploadFingerprint;

